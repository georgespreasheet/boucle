function deleteRowsNotInSource() {
  const sourceSheetId = 'xxx';
  const sourceSheetName = 'xxx';
  const destinationSheetName = 'xxx';

  const destinationSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(destinationSheetName);
  if (!destinationSheet) {
    throw new Error('Feuille de calcul destination introuvable');
  }

  const sourceSheet = SpreadsheetApp.openById(sourceSheetId).getSheetByName(sourceSheetName);
  if (!sourceSheet) {
    throw new Error('Feuille de calcul source introuvable');
  }

  const sourceRange = sourceSheet.getRange('A2:A');
  const sourceValues = sourceRange.getValues().flat();

  const destinationRange = destinationSheet.getRange('A2:A');
  const destinationValues = destinationRange.getValues().flat();

  const rowsToDelete = [];

  destinationValues.forEach(function (destinationValue, index) {
    if (!sourceValues.includes(destinationValue)) {
      rowsToDelete.push(index + 2);
    }
  });

  rowsToDelete.reverse().forEach(function (rowToDelete) {
    destinationSheet.deleteRow(rowToDelete);
  });
  
  const sourceData = sourceSheet.getRange('B2:B').getValues();
  const destinationData = destinationSheet.getRange('B2:B').getValues();

  const rowsToAdd = sourceData.filter(function(row) {
    return !destinationData.flat().includes(row[0]);
  });

  if (rowsToAdd.length > 0) {
    destinationSheet.insertRowsAfter(destinationSheet.getLastRow(), rowsToAdd.length);
    const newRange = destinationSheet.getRange(destinationSheet.getLastRow() + 1, 2, rowsToAdd.length, 1);
    newRange.setValues(rowsToAdd);
  }
}
